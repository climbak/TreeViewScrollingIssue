<Window x:Class="TreeViewScrollingIssue.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TreeViewScrollingIssue"
        mc:Ignorable="d"
        Title="MainWindow" Height="606" Width="800" ResizeMode="NoResize">

  <Window.Resources>
    <ResourceDictionary>

      <HierarchicalDataTemplate DataType="{x:Type local:BasicItemViewModel}" ItemsSource="{Binding ChildrenView}">
        <TextBlock Text="{Binding Name}"/>
      </HierarchicalDataTemplate>

      <HierarchicalDataTemplate DataType="{x:Type local:ItemWithAttributesViewModel}">
        <TextBlock Text="{Binding Name}"/>
      </HierarchicalDataTemplate>

      <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

      <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" Padding="{TemplateBinding Padding}">
                <Path x:Name="ExpandPath" Fill="Transparent" Stroke="Gray" Data="{StaticResource TreeArrow}">
                  <Path.RenderTransform>
                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                  </Path.RenderTransform>
                </Path>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Stroke" TargetName="ExpandPath" Value="DodgerBlue"/>
                  <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="RenderTransform" TargetName="ExpandPath">
                    <Setter.Value>
                      <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Fill" TargetName="ExpandPath" Value="Gray"/>
                  <Setter Property="Stroke" TargetName="ExpandPath" Value="Gray"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter Property="Fill" TargetName="ExpandPath" Value="DodgerBlue"/>
                  <Setter Property="Stroke" TargetName="ExpandPath" Value="DodgerBlue"/>
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </Window.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" MinWidth="300"/> <!-- this column being auto causes problems -->
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height ="Auto" />
      <RowDefinition Height ="*" />
      <RowDefinition Height ="Auto" />
      <RowDefinition Height ="Auto" />
    </Grid.RowDefinitions>

    <StackPanel Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Orientation="Horizontal" >
      <Button Content="Fill" Width="75" Height="25" Margin="5" Command="{Binding FillCommand}"/>
      <Button Content="Expand All" Width="75" Height="25" Margin="5" Command="{Binding ExpandCommand}"/>
    </StackPanel>
    
    <TreeView x:Name="_tree" BorderThickness="0,1,1,1"
              Grid.Row="1" Grid.Column="0"
              ItemsSource="{Binding ItemsView}"
              VirtualizingPanel.IsVirtualizing="True"
              VirtualizingPanel.VirtualizationMode="Recycling" >
      <i:Interaction.Behaviors>
        <local:BindableSelectedItemBehavior SelectedItem="{Binding SelectedTreeItem, Mode=TwoWay}" />
      </i:Interaction.Behaviors>

      <TreeView.ItemContainerStyle>
        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
          <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
          <Setter Property="BorderThickness" Value="0.7" />
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
          <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TreeViewItem}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <ToggleButton x:Name="Expander"
                                Grid.Row="0"
                                Grid.Column="0"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                ClickMode="Press"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                  <Border x:Name="Bd"
                          Grid.Row="0"
                          Grid.Column="1"
                          SnapsToDevicePixels="true"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Padding="{TemplateBinding Padding}">
                    <ContentPresenter x:Name="PART_Header"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      ContentSource="Header" />
                  </Border>
                  <ItemsPresenter x:Name="ItemsHost"
                                  Grid.Row="1"
                                  Grid.Column="1"  />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded"
                           Value="false">
                    <Setter Property="Visibility"
                            TargetName="ItemsHost"
                            Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="HasItems"
                           Value="false">
                    <Setter Property="Visibility"
                            TargetName="Expander"
                            Value="Hidden" />
                  </Trigger>

                  <Trigger Property="IsSelected"
                           Value="True">
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="CornflowerBlue" />
                  </Trigger>

                  <!--Whenever the mouse is over any item, highlight its border-->
                  <Trigger Property="IsMouseOver"
                           SourceName="Bd"
                           Value="true">
                    <Setter Property="BorderBrush"
                            TargetName="Bd"
                            Value="DodgerBlue" />
                  </Trigger>

                  <!--When the mouse is over an unselected item, highlight its background-->
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsMouseOver"
                                 SourceName="Bd"
                                 Value="true" />
                      <Condition Property="IsSelected"
                                 Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            TargetName="Bd"
                            Value="LightSkyBlue" />
                    <Setter Property="BorderThickness"
                            TargetName="Bd"
                            Value="0.7" />
                  </MultiTrigger>

                  <Trigger Property="IsEnabled"
                           Value="false">
                    <Setter Property="Foreground"
                            Value="DarkSlateGray" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </TreeView.ItemContainerStyle>

    </TreeView>

    <DataGrid Grid.Column="2" Grid.Row="1"
              ItemsSource="{Binding SelectedItemWithAttributes.AttributesView}"
              SelectionMode="Single"
              SelectedItem="{Binding SelectedAttribute, Mode=TwoWay}"
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              CanUserDeleteRows="False" BorderThickness="1,1,0,1"
              HorizontalScrollBarVisibility="Auto"
              RowBackground="WhiteSmoke"
              AlternatingRowBackground="DarkGray" >

      <DataGrid.Columns>

        <DataGridTemplateColumn Header="Name"
                              Width="auto"
                              MinWidth="75"
                              CanUserSort="False" >
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Name}" />
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

      </DataGrid.Columns>

    </DataGrid>

    <!-- this button here causes problems in combination with the column size definition noted above -->
    <Button Grid.Column="2" Grid.Row="3" Margin="1,2,1,2" 
            HorizontalAlignment="Left" VerticalAlignment="Top" 
            Width="50" Height="22" Content="Button"/>
  </Grid>
</Window>
